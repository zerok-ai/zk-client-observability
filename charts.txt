NAME: zk-promtail
LAST DEPLOYED: Sat Oct 14 19:32:57 2023
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
global:
  redis:
    host: redis-master.zk-client.svc.cluster.local
promtail:
  config:
    clients:
    - url: http://zk-wsp-client.zk-client.svc.cluster.local:8987/request?X-PROXY-DESTINATION=http://loki-loki-distributed-gateway.grafana-loki.svc.cluster.local/loki/api/v1/push
    snippets:
      clusterId: zk
      scrapeConfigs: |
        # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
        - job_name: kubernetes-pods
          pipeline_stages:
            {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_controller_name
              regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
              action: replace
              target_label: __tmp_controller_name
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                - __meta_kubernetes_pod_label_app
                - __tmp_controller_name
                - __meta_kubernetes_pod_name
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: app
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                - __meta_kubernetes_pod_label_instance
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: instance
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - __meta_kubernetes_pod_label_component
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: component
            - action: replace
              replacement: {{ .Values.config.snippets.clusterId }}
              target_label: client
            - source_labels:
                - __meta_kubernetes_namespace
              action: keep
              regex: zk-client
            {{- if .Values.config.snippets.addScrapeJobLabel }}
            - replacement: kubernetes-pods
              target_label: scrape_job
            {{- end }}
            {{- toYaml .Values.config.snippets.common | nindent 4 }}
            {{- with .Values.config.snippets.extraRelabelConfigs }}
            {{- toYaml . | nindent 4 }}
            {{- end }}

COMPUTED VALUES:
global:
  redis:
    host: redis-master.zk-client.svc.cluster.local
promtail:
  affinity: {}
  annotations: {}
  config:
    clients:
    - url: http://zk-wsp-client.zk-client.svc.cluster.local:8987/request?X-PROXY-DESTINATION=http://loki-loki-distributed-gateway.grafana-loki.svc.cluster.local/loki/api/v1/push
    enableTracing: false
    enabled: true
    file: |
      server:
        log_level: {{ .Values.config.logLevel }}
        log_format: {{ .Values.config.logFormat }}
        http_listen_port: {{ .Values.config.serverPort }}
        {{- with .Values.httpPathPrefix }}
        http_path_prefix: {{ . }}
        {{- end }}
        {{- tpl .Values.config.snippets.extraServerConfigs . | nindent 2 }}

      clients:
        {{- tpl (toYaml .Values.config.clients) . | nindent 2 }}

      positions:
        {{- tpl (toYaml .Values.config.positions) . | nindent 2 }}

      scrape_configs:
        {{- tpl .Values.config.snippets.scrapeConfigs . | nindent 2 }}
        {{- tpl .Values.config.snippets.extraScrapeConfigs . | nindent 2 }}

      limits_config:
        {{- tpl .Values.config.snippets.extraLimitsConfig . | nindent 2 }}

      tracing:
        enabled: {{ .Values.config.enableTracing }}
    logFormat: logfmt
    logLevel: info
    positions:
      filename: /run/promtail/positions.yaml
    serverPort: 3101
    snippets:
      addScrapeJobLabel: false
      clusterId: zk
      common:
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node_name
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - namespace
        - app
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - action: replace
        replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
      - action: replace
        regex: true/(.*)
        replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
        - __meta_kubernetes_pod_container_name
        target_label: __path__
      extraLimitsConfig: ""
      extraRelabelConfigs: []
      extraScrapeConfigs: ""
      extraServerConfigs: ""
      pipelineStages:
      - cri: {}
      scrapeConfigs: |
        # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
        - job_name: kubernetes-pods
          pipeline_stages:
            {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_controller_name
              regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
              action: replace
              target_label: __tmp_controller_name
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                - __meta_kubernetes_pod_label_app
                - __tmp_controller_name
                - __meta_kubernetes_pod_name
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: app
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                - __meta_kubernetes_pod_label_instance
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: instance
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - __meta_kubernetes_pod_label_component
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: component
            - action: replace
              replacement: {{ .Values.config.snippets.clusterId }}
              target_label: client
            - source_labels:
                - __meta_kubernetes_namespace
              action: keep
              regex: zk-client
            {{- if .Values.config.snippets.addScrapeJobLabel }}
            - replacement: kubernetes-pods
              target_label: scrape_job
            {{- end }}
            {{- toYaml .Values.config.snippets.common | nindent 4 }}
            {{- with .Values.config.snippets.extraRelabelConfigs }}
            {{- toYaml . | nindent 4 }}
            {{- end }}
  configmap:
    enabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
  daemonset:
    autoscaling:
      controlledResources: []
      enabled: false
      maxAllowed: {}
      minAllowed: {}
    enabled: true
  defaultVolumeMounts:
  - mountPath: /run/promtail
    name: run
  - mountPath: /var/lib/docker/containers
    name: containers
    readOnly: true
  - mountPath: /var/log/pods
    name: pods
    readOnly: true
  defaultVolumes:
  - hostPath:
      path: /run/promtail
    name: run
  - hostPath:
      path: /var/lib/docker/containers
    name: containers
  - hostPath:
      path: /var/log/pods
    name: pods
  deployment:
    autoscaling:
      enabled: false
      maxReplicas: 10
      minReplicas: 1
      strategy:
        type: RollingUpdate
      targetCPUUtilizationPercentage: 80
    enabled: false
    replicaCount: 1
  enableServiceLinks: true
  extraArgs: []
  extraContainers: {}
  extraEnv: []
  extraEnvFrom: []
  extraObjects: []
  extraPorts: {}
  extraVolumeMounts: []
  extraVolumes: []
  global:
    imagePullSecrets: []
    imageRegistry: ""
    redis:
      host: redis-master.zk-client.svc.cluster.local
  hostAliases: []
  httpPathPrefix: ""
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: grafana/promtail
  imagePullSecrets: []
  initContainer: []
  livenessProbe: {}
  networkPolicy:
    enabled: false
    k8sApi:
      cidrs: []
      port: 8443
    metrics:
      cidrs: []
      namespaceSelector: {}
      podSelector: {}
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsGroup: 0
    runAsUser: 0
  podSecurityPolicy:
    allowPrivilegeEscalation: true
    fsGroup:
      rule: RunAsAny
    hostIPC: false
    hostNetwork: false
    hostPID: false
    privileged: true
    readOnlyRootFilesystem: true
    requiredDropCapabilities:
    - ALL
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
    - secret
    - hostPath
    - downwardAPI
  rbac:
    create: true
    pspEnabled: false
  readinessProbe:
    failureThreshold: 5
    httpGet:
      path: '{{ printf `%s/ready` .Values.httpPathPrefix }}'
      port: http-metrics
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  resources: {}
  secret:
    annotations: {}
    labels: {}
  serviceAccount:
    annotations: {}
    create: true
    imagePullSecrets: []
  serviceMonitor:
    annotations: {}
    enabled: false
    labels: {}
    metricRelabelings: []
    namespaceSelector: {}
    prometheusRule:
      additionalLabels: {}
      enabled: false
      rules: []
    relabelings: []
    scheme: http
    targetLabels: []
  sidecar:
    configReloader:
      config:
        serverPort: 9533
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      enabled: false
      extraArgs: []
      extraEnv: []
      extraEnvFrom: []
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: jimmidyson/configmap-reload
        tag: v0.8.0
      livenessProbe: {}
      readinessProbe: {}
      resources: {}
      serviceMonitor:
        enabled: true
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
    operator: Exists
  updateStrategy: {}

HOOKS:
MANIFEST:
---
# Source: zk-promtail/charts/promtail/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: zk-promtail
  namespace: default
  labels:
    helm.sh/chart: promtail-6.15.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: zk-promtail
    app.kubernetes.io/version: "2.9.1"
    app.kubernetes.io/managed-by: Helm
stringData:
  promtail.yaml: |
    server:
      log_level: info
      log_format: logfmt
      http_listen_port: 3101
      
    
    clients:
      - url: http://zk-wsp-client.zk-client.svc.cluster.local:8987/request?X-PROXY-DESTINATION=http://loki-loki-distributed-gateway.grafana-loki.svc.cluster.local/loki/api/v1/push
    
    positions:
      filename: /run/promtail/positions.yaml
    
    scrape_configs:
      # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_instance
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            replacement: zk
            target_label: client
          - source_labels:
              - __meta_kubernetes_namespace
            action: keep
            regex: zk-client
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__
      
      
    
    limits_config:
      
    
    tracing:
      enabled: false
---
# Source: zk-promtail/charts/promtail/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zk-promtail
  namespace: default
  labels:
    helm.sh/chart: promtail-6.15.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: zk-promtail
    app.kubernetes.io/version: "2.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: promtail
      app.kubernetes.io/instance: zk-promtail
  updateStrategy:
    {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: promtail
        app.kubernetes.io/instance: zk-promtail
      annotations:
        checksum/config: c0de54169b8d32756fb7a7aaf81720b33f0eaae12b45567fa7ce281046ee321e
    spec:
      serviceAccountName: zk-promtail
      enableServiceLinks: true
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      containers:
        - name: promtail
          image: "docker.io/grafana/promtail:2.9.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/promtail/promtail.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - mountPath: /run/promtail
              name: run
            - mountPath: /var/lib/docker/containers
              name: containers
              readOnly: true
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - name: http-metrics
              containerPort: 3101
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: '/ready'
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: config
          secret:
            secretName: zk-promtail
        - hostPath:
            path: /run/promtail
          name: run
        - hostPath:
            path: /var/lib/docker/containers
          name: containers
        - hostPath:
            path: /var/log/pods
          name: pods

